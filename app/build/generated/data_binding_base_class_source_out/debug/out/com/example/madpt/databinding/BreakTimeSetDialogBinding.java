// Generated by view binder compiler. Do not edit!
package com.example.madpt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.madpt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BreakTimeSetDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText breakTime;

  @NonNull
  public final Button btnMinus;

  @NonNull
  public final Button btnPlus;

  @NonNull
  public final Button cancel;

  @NonNull
  public final Button confirm;

  @NonNull
  public final TextView textView;

  private BreakTimeSetDialogBinding(@NonNull LinearLayout rootView, @NonNull EditText breakTime,
      @NonNull Button btnMinus, @NonNull Button btnPlus, @NonNull Button cancel,
      @NonNull Button confirm, @NonNull TextView textView) {
    this.rootView = rootView;
    this.breakTime = breakTime;
    this.btnMinus = btnMinus;
    this.btnPlus = btnPlus;
    this.cancel = cancel;
    this.confirm = confirm;
    this.textView = textView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BreakTimeSetDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BreakTimeSetDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.break_time_set_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BreakTimeSetDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.breakTime;
      EditText breakTime = ViewBindings.findChildViewById(rootView, id);
      if (breakTime == null) {
        break missingId;
      }

      id = R.id.btn_minus;
      Button btnMinus = ViewBindings.findChildViewById(rootView, id);
      if (btnMinus == null) {
        break missingId;
      }

      id = R.id.btn_plus;
      Button btnPlus = ViewBindings.findChildViewById(rootView, id);
      if (btnPlus == null) {
        break missingId;
      }

      id = R.id.cancel;
      Button cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.confirm;
      Button confirm = ViewBindings.findChildViewById(rootView, id);
      if (confirm == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new BreakTimeSetDialogBinding((LinearLayout) rootView, breakTime, btnMinus, btnPlus,
          cancel, confirm, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
